// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  books Book[]

  // one-V-one linkage

  profile Profile?

  @@map("users")
}

model Book {
  id          Int      @id @default(autoincrement())
  title       String
  author      String
  description String
  genre       String
  price       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // user to book linkage

  user   User @relation(fields: [userId], references: [id])
  userId Int

  // Book to category linkage

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  @@map("books")
}

model Profile {
  id        Int      @id @default(autoincrement())
  bio       String
  username  String   @unique
  avatar    String?
  // userId Int @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  // key feature
  userId    Int      @unique

  @@map("profiles")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // migration

  books Book[]

  @@map("categories")
}
